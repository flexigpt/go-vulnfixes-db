{
  "schema_version": "1.6.3",
  "id": "CVE-2024-22189",
  "modified": "2024-05-20T16:03:47Z",
  "published": "2024-04-05T16:53:41Z",
  "aliases": [
    "GO-2024-2682",
    "GHSA-c33x-xqrf-c478"
  ],
  "related": [],
  "summary": "Denial of service via connection starvation in github.com/quic-go/quic-go. quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available. quic-go es una implementación del protocolo QUIC en Go. Antes de la versión 0.42.0, un atacante podía hacer que su par se quedara sin memoria enviando una gran cantidad de tramas `NEW_CONNECTION_ID` que retiraban los ID de conexión antiguos. Se supone que el receptor debe responder a cada cuadro de retiro con un cuadro `RETIRE_CONNECTION_ID`. El atacante puede evitar que el receptor envíe (la gran mayoría de) estas tramas `RETIRE_CONNECTION_ID` colapsando la ventana de congestión del par (al reconocer selectivamente los paquetes recibidos) y manipulando la estimación de RTT del par. La versión 0.42.0 contiene un parche para el problema. No hay workarounds disponibles",
  "details": "An attacker can cause its peer to run out of memory by sending a large number of NEW_CONNECTION_ID frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a RETIRE_CONNECTION_ID frame. The attacker can prevent the receiver from sending out (the vast majority of) these RETIRE_CONNECTION_ID frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "7.5"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/quic-go/quic-go"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.42.0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "imports": [
          {
            "path": "github.com/quic-go/quic-go",
            "symbols": [
              "Dial",
              "DialAddr",
              "DialAddrEarly",
              "DialEarly",
              "Listen",
              "ListenAddr",
              "ListenAddrEarly",
              "ListenEarly",
              "Transport.Dial",
              "Transport.DialEarly",
              "Transport.Listen",
              "Transport.ListenEarly",
              "connIDGenerator.Retire",
              "connIDGenerator.SetMaxActiveConnIDs",
              "connIDManager.Add",
              "connIDManager.Get",
              "connection.AcceptStream",
              "connection.AcceptUniStream",
              "connection.OpenStream",
              "connection.OpenStreamSync",
              "connection.OpenUniStream",
              "connection.OpenUniStreamSync",
              "connection.run",
              "framerI.AppendStreamFrames",
              "framerI.QueueControlFrame",
              "packetPacker.AppendPacket",
              "packetPacker.MaybePackProbePacket",
              "packetPacker.PackAckOnlyPacket",
              "packetPacker.PackApplicationClose",
              "packetPacker.PackCoalescedPacket",
              "packetPacker.PackConnectionClose",
              "packetPacker.PackMTUProbePacket",
              "receiveStream.CancelRead",
              "receiveStream.CloseRemote",
              "receiveStream.Read",
              "sendStream.CancelWrite",
              "streamsMap.AcceptStream",
              "streamsMap.AcceptUniStream",
              "streamsMap.DeleteStream",
              "streamsMap.HandleMaxStreamsFrame",
              "streamsMap.OpenStream",
              "streamsMap.OpenStreamSync",
              "streamsMap.OpenUniStream",
              "streamsMap.OpenUniStreamSync",
              "streamsMap.UpdateLimits",
              "windowUpdateQueue.QueueAll"
            ]
          }
        ]
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a"
    },
    {
      "type": "WEB",
      "url": "https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management"
    },
    {
      "type": "WEB",
      "url": "https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478"
    },
    {
      "type": "WEB",
      "url": "https://www.youtube.com/watch?v=JqXtYcZAtIA&t=3683s"
    }
  ],
  "credits": [
    {
      "name": "marten-seemann"
    }
  ],
  "database_specific": {
    "metrics": {
      "cvssMetricV31": [
        {
          "source": "security-advisories@github.com",
          "type": "Secondary",
          "cvssData": {
            "version": "3.1",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "attackVector": "NETWORK",
            "attackComplexity": "LOW",
            "privilegesRequired": "NONE",
            "userInteraction": "NONE",
            "scope": "UNCHANGED",
            "confidentialityImpact": "NONE",
            "integrityImpact": "NONE",
            "availabilityImpact": "HIGH",
            "baseScore": 7.5,
            "baseSeverity": "HIGH"
          },
          "exploitabilityScore": 3.9,
          "impactScore": 3.6
        }
      ]
    },
    "cwe_details": [
      {
        "cwe_id": "security-advisories@github.com",
        "name": "Secondary",
        "description": "CWE-770",
        "url": ""
      }
    ],
    "repositories": [
      {
        "url": "https://github.com/quic-go/quic-go",
        "name": "quic-go/quic-go",
        "description": "A QUIC implementation in pure Go",
        "date_created": "2016-04-06T20:16:27Z",
        "date_last_push": "2024-06-10T06:58:47Z",
        "owner": "quic-go",
        "forks_count": "1277",
        "stars_count": "9674",
        "repo_language": "Go"
      }
    ],
    "nodes": [],
    "vulndb_data": {
      "url": "https://pkg.go.dev/vuln/GO-2024-2682",
      "review_status": "REVIEWED"
    },
    "datasources": {
      "govuln": true,
      "nvd": true,
      "cvefixes": false
    }
  }
}